{"version":3,"sources":["/Users/olavo/Projects/node-factory/docs/api/factory.mdx"],"names":["layoutProps","MDXLayout","MDXContent","components","props","mdxType","parentName","to","style","marginTop","marginBottom","opacity","isMDXComponent"],"mappings":"mXAYMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACH,EAAD,iBAAeD,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,iBAAQ,CACN,GAAM,oBACL,0BAAYC,WAAW,MAAvB,uBACH,iBAAQ,CACN,GAAM,QADR,QAGA,sBACE,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,cAAuD,YAAC,IAAD,CAAMC,GAAG,8BAA8BF,QAAQ,QAAO,0BAAYC,WAAW,MAAvB,uBAAjI,mFAA2R,0BAAYA,WAAW,MAAvB,SAA3R,6BAEF,iBAAQ,CACN,GAAM,UADR,UAGA,sBACE,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,mBAA4D,YAAC,IAAD,CAAMC,GAAG,4BAA4BF,QAAQ,QAAO,0BAAYC,WAAW,MAAvB,qBAApI,+CAAwP,YAAC,IAAD,CAAMC,GAAG,cAAcF,QAAQ,QAAO,0BAAYC,WAAW,MAAvB,WAA9R,KAA8V,YAAC,IAAD,CAAMC,GAAG,YAAYF,QAAQ,QAAO,0BAAYC,WAAW,MAAvB,SAAlY,KAAgc,YAAC,IAAD,CAAMC,GAAG,YAAYF,QAAQ,QAAO,0BAAYC,WAAW,MAAvB,SAApe,QAAqiB,YAAC,IAAD,CAAMC,GAAG,YAAYF,QAAQ,QAAO,0BAAYC,WAAW,MAAvB,WAE3kB,kBAAIE,MAAO,CACTC,UAAW,OACXC,aAAc,OACdC,QAAS,SAEX,iBAAQ,CACN,GAAM,eADR,eAGA,gMAC6B,+BAAGL,WAAW,KAAQ,CAC/C,KAAQ,uCADiB,YAD7B,gEAIA,iBAAQ,CACN,GAAM,SADR,SAGA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,yN,0KAgBTJ,EAAWU,gBAAiB","file":"static/js/docs-api-factory.b0083da2.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Link } from 'docz';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"factorygenerator\"\n    }}><inlineCode parentName=\"h1\">{`factory(generator)`}</inlineCode></h1>\n    <h3 {...{\n      \"id\": \"args\"\n    }}>{`args`}</h3>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`generator `}</inlineCode><Link to=\"/api/types#factorygenerator\" mdxType=\"Link\"><inlineCode parentName=\"li\">{`(FactoryGenerator)`}</inlineCode></Link>{`: Generator function which describes your data object. This function receives a `}<inlineCode parentName=\"li\">{`faker`}</inlineCode>{` instance as an argument`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"return\"\n    }}>{`return`}</h3>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Factory object `}</inlineCode><Link to=\"/api/types#ifactoryobject\" mdxType=\"Link\"><inlineCode parentName=\"li\">{`(IFactoryObject)`}</inlineCode></Link>{`: The factory object contains four methods: `}<Link to=\"/api/create\" mdxType=\"Link\"><inlineCode parentName=\"li\">{`create`}</inlineCode></Link>{`, `}<Link to=\"/api/only\" mdxType=\"Link\"><inlineCode parentName=\"li\">{`only`}</inlineCode></Link>{`, `}<Link to=\"/api/make\" mdxType=\"Link\"><inlineCode parentName=\"li\">{`make`}</inlineCode></Link>{` and `}<Link to=\"/api/seed\" mdxType=\"Link\"><inlineCode parentName=\"li\">{`seed`}</inlineCode></Link></li>\n    </ul>\n    <hr style={{\n      marginTop: '2rem',\n      marginBottom: '2rem',\n      opacity: '0.2'\n    }} />\n    <h2 {...{\n      \"id\": \"description\"\n    }}>{`Description`}</h2>\n    <p>{`You should create a factory object for the data you want to generate. To do that, you need to specify the type of data. To do this, the\nfactory class makes use of the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/marak/Faker.js/\"\n      }}>{`Faker.js`}</a>{` package which provides an easy way to generate random data.`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { factory } from 'node-factory';\n\nconst UserFactory = factory(fake => ({\n  id: fake.random.uuid(),\n  name: fake.name.findName(),\n  email: fake.internet.email(),\n}));\n\nexport default UserFactory;\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}