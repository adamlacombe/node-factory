(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{"./docs/observations/updateFromV026.mdx":function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return s});var o=t("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),a=(t("./node_modules/react/index.js"),t("./node_modules/@mdx-js/react/dist/index.es.js")),i={},r="wrapper";function s(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(a.b)(r,Object.assign({},i,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"updating-from-v026"},"Updating from v0.2.6"),Object(a.b)("p",null,"Version 0.3.0 has breaking changes from v0.2.6. The API from ",Object(a.b)("inlineCode",{parentName:"p"},"make")," and ",Object(a.b)("inlineCode",{parentName:"p"},"create")," has been modified. They essencially have the\nsame API but ",Object(a.b)("inlineCode",{parentName:"p"},"create")," returns a promise while ",Object(a.b)("inlineCode",{parentName:"p"},"make")," simply returns the data. As a general rule of thumb, is you're\nnot testing a database, use ",Object(a.b)("inlineCode",{parentName:"p"},"make"),". Please refer to the API section for more details on how to use them."),Object(a.b)("h2",{id:"updating-from-v012"},"Updating from v0.1.2"),Object(a.b)("p",null,"Version 0.2.0 is a complete rewrite of the package which, not only implemented TypeScript and tests, but introduces\na whole new API which simplifies the package usage. This generated braking changes from the previous\nversions and will require refactoring. Sorry for the inconvenience."))}s&&s===Object(s)&&Object.isExtensible(s)&&Object.defineProperty(s,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"docs/observations/updateFromV026.mdx"}}),s.isMDXComponent=!0}}]);
//# sourceMappingURL=docs-observations-update-from-v026.ee169855a235daf95671.js.map