{"remainingRequest":"/Users/olavo/Projects/node-factory/node_modules/docz-core/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/olavo/Projects/node-factory/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":false,\"typescript\":true,\"parseProps\":false}]],\"plugins\":[[\"/Users/olavo/Projects/node-factory/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}]],\"babelrc\":false,\"cacheCompression\":true,\"compact\":true}!/Users/olavo/Projects/node-factory/node_modules/react-docgen-typescript-loader/dist/index.js?{}!/Users/olavo/Projects/node-factory/docs/api/UserFactory.tsx","dependencies":[{"path":"/Users/olavo/Projects/node-factory/docs/api/UserFactory.tsx","mtime":1550273820808},{"path":"/Users/olavo/Projects/node-factory/node_modules/cache-loader/dist/cjs.js","mtime":1549581148956},{"path":"/Users/olavo/Projects/node-factory/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1549581148595},{"path":"/Users/olavo/Projects/node-factory/node_modules/react-docgen-typescript-loader/dist/index.js","mtime":1549581149558}],"contextDependencies":[],"result":["// tslint:disable\nimport React from'react';import{factory}from'../../src/index';var UserFactory=factory(function(fake){return{id:fake.random.uuid(),name:fake.name.findName(),email:fake.internet.email()};});function syntaxHighlight(json){var styles={number:'color: #3490DC',key:'color: #6CB2EB',string:'color: #3490DC',boolean:'color: #621B18',null:'color: #E3342F'};if(typeof json!='string'){json=JSON.stringify(json,undefined,2);}json=json.replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;');return json.replace(/(\"(\\\\u[a-zA-Z0-9]{4}|\\\\[^u]|[^\\\\\"])*\"(\\s*:)?|\\b(true|false|null)\\b|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)/g,function(match){var cls='number';if(/^\"/.test(match)){if(/:$/.test(match)){cls='key';}else{cls='string';}}else if(/true|false/.test(match)){cls='boolean';}else if(/null/.test(match)){cls='null';}return'<span style=\"'+styles[cls]+'\">'+match+'</span>';});}export default(function(_ref){var parse=_ref.parse;return React.createElement(\"pre\",{style:{background:'#EEF1F5',borderLeft:'5px solid #CED4DE',color:'#7D899C',margin:'-30px 0 25px 2px',padding:'20px',fontStyle:'italic',fontSize:'18px'},dangerouslySetInnerHTML:{__html:syntaxHighlight(parse(UserFactory))}});});try{// @ts-ignore\nUserFactory.displayName=\"UserFactory\";// @ts-ignore\nUserFactory.__docgenInfo={\"description\":\"\",\"displayName\":\"UserFactory\",\"props\":{\"parse\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"parse\",\"required\":true,\"type\":{\"name\":\"any\"}}}};// @ts-ignore\nif(typeof STORYBOOK_REACT_CLASSES!==\"undefined\")// @ts-ignore\nSTORYBOOK_REACT_CLASSES[\"docs/api/UserFactory.tsx#UserFactory\"]={docgenInfo:UserFactory.__docgenInfo,name:\"UserFactory\",path:\"docs/api/UserFactory.tsx#UserFactory\"};}catch(__react_docgen_typescript_loader_error){}",{"version":3,"sources":["/Users/olavo/Projects/node-factory/docs/api/UserFactory.tsx"],"names":["React","factory","UserFactory","fake","id","random","uuid","name","findName","email","internet","syntaxHighlight","json","styles","number","key","string","boolean","null","JSON","stringify","undefined","replace","match","cls","test","parse","background","borderLeft","color","margin","padding","fontStyle","fontSize","__html","displayName","__docgenInfo","STORYBOOK_REACT_CLASSES","docgenInfo","path","__react_docgen_typescript_loader_error"],"mappings":"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","sourcesContent":["// tslint:disable\nimport React from 'react';\nimport { factory } from '../../src/index';\n\nconst UserFactory = factory(fake => ({\n  id: fake.random.uuid(),\n  name: fake.name.findName(),\n  email: fake.internet.email(),\n}));\n\nfunction syntaxHighlight(json) {\n  const styles = {\n    number: 'color: #3490DC',\n    key: 'color: #6CB2EB',\n    string: 'color: #3490DC',\n    boolean: 'color: #621B18',\n    null: 'color: #E3342F',\n  };\n\n  if (typeof json != 'string') {\n       json = JSON.stringify(json, undefined, 2);\n  }\n  json = json.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n  return json.replace(/(\"(\\\\u[a-zA-Z0-9]{4}|\\\\[^u]|[^\\\\\"])*\"(\\s*:)?|\\b(true|false|null)\\b|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)/g, function (match) {\n      var cls = 'number';\n      if (/^\"/.test(match)) {\n          if (/:$/.test(match)) {\n              cls = 'key';\n          } else {\n              cls = 'string';\n          }\n      } else if (/true|false/.test(match)) {\n          cls = 'boolean';\n      } else if (/null/.test(match)) {\n          cls = 'null';\n      }\n      return '<span style=\"' + styles[cls] + '\">' + match + '</span>';\n  });\n}\n\nexport default ({ parse }) => (\n  <pre style={{\n    background: '#EEF1F5',\n    borderLeft: '5px solid #CED4DE',\n    color: '#7D899C',\n    margin: '-30px 0 25px 2px',\n    padding: '20px',\n    fontStyle: 'italic',\n    fontSize: '18px',\n  }} dangerouslySetInnerHTML={{ __html: syntaxHighlight(parse(UserFactory)) }} />\n);\ntry {\n    // @ts-ignore\n    UserFactory.displayName = \"UserFactory\";\n    // @ts-ignore\n    UserFactory.__docgenInfo = { \"description\": \"\", \"displayName\": \"UserFactory\", \"props\": { \"parse\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"parse\", \"required\": true, \"type\": { \"name\": \"any\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"docs/api/UserFactory.tsx#UserFactory\"] = { docgenInfo: UserFactory.__docgenInfo, name: \"UserFactory\", path: \"docs/api/UserFactory.tsx#UserFactory\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"]}]}