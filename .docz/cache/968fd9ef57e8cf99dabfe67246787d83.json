{"remainingRequest":"/Users/olavo/Projects/node-factory/node_modules/docz-core/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/olavo/Projects/node-factory/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":false,\"typescript\":true,\"parseProps\":false}]],\"plugins\":[[\"/Users/olavo/Projects/node-factory/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/olavo/Projects/node-factory/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/olavo/Projects/node-factory/node_modules/react-docgen-typescript-loader/dist/index.js?{}!/Users/olavo/Projects/node-factory/src/index.ts","dependencies":[{"path":"/Users/olavo/Projects/node-factory/src/index.ts","mtime":1550265262326},{"path":"/Users/olavo/Projects/node-factory/node_modules/cache-loader/dist/cjs.js","mtime":1549581148956},{"path":"/Users/olavo/Projects/node-factory/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1549581148595},{"path":"/Users/olavo/Projects/node-factory/node_modules/react-docgen-typescript-loader/dist/index.js","mtime":1549581149558}],"contextDependencies":[],"result":["(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport faker from 'faker';\n\nvar resolveArgs = function resolveArgs(count) {\n  var overrides = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var length;\n  var data;\n\n  if (typeof count !== 'number') {\n    data = count;\n    length = 1;\n  } else {\n    data = overrides;\n    length = count > 0 ? count : 1;\n  }\n\n  return {\n    data: data,\n    length: length\n  };\n};\n\nexport var factory = function factory(generator) {\n  var create = function create() {\n    var overrides = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var data = generator(faker);\n    return _objectSpread({}, data, overrides);\n  };\n\n  var make = function make() {\n    var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    var overrides = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var _resolveArgs = resolveArgs(count, overrides),\n        data = _resolveArgs.data,\n        length = _resolveArgs.length;\n\n    return Array.from({\n      length: length\n    }).map(function () {\n      return create(data);\n    });\n  };\n\n  var only = function only(keys) {\n    var overrides = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var data = create(overrides);\n    return Array.isArray(keys) ? keys.reduce(function (filtered, key) {\n      return _objectSpread({}, filtered, _defineProperty({}, key, data[key]));\n    }, {}) : _defineProperty({}, keys, data[keys]);\n  };\n\n  var seed = function seed(value) {\n    faker.seed(value);\n    return factoryObject;\n  };\n\n  var factoryObject = {\n    create: create,\n    make: make,\n    only: only,\n    seed: seed\n  };\n  return factoryObject;\n};\n\ntry {\n  // @ts-ignore\n  factory.displayName = \"factory\"; // @ts-ignore\n\n  factory.__docgenInfo = {\n    \"description\": \"\",\n    \"displayName\": \"factory\",\n    \"props\": {}\n  }; // @ts-ignore\n\n  if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") // @ts-ignore\n    STORYBOOK_REACT_CLASSES[\"src/index.ts#factory\"] = {\n      docgenInfo: factory.__docgenInfo,\n      name: \"factory\",\n      path: \"src/index.ts#factory\"\n    };\n} catch (__react_docgen_typescript_loader_error) {}\n\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(resolveArgs, \"resolveArgs\", \"/Users/olavo/Projects/node-factory/src/index.ts\");\n  reactHotLoader.register(factory, \"factory\", \"/Users/olavo/Projects/node-factory/src/index.ts\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();",{"version":3,"sources":["/Users/olavo/Projects/node-factory/src/index.ts"],"names":["faker","resolveArgs","count","overrides","length","data","factory","generator","create","make","Array","from","map","only","keys","isArray","reduce","filtered","key","seed","value","factoryObject","displayName","__docgenInfo","STORYBOOK_REACT_CLASSES","docgenInfo","name","path","__react_docgen_typescript_loader_error"],"mappings":"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","sourcesContent":["import faker from 'faker';\nimport { FactoryGenerator, IDataObject, IFactoryObject } from './types';\n\nconst resolveArgs = (count: number | IDataObject, overrides: IDataObject = {}): IDataObject => {\n  let length: number;\n  let data: IDataObject;\n\n  if (typeof count !== 'number') {\n    data = count;\n    length = 1;\n  } else {\n    data = overrides;\n    length = count > 0 ? count : 1;\n  }\n\n  return { data, length };\n};\n\nexport const factory = (generator: FactoryGenerator): IFactoryObject => {\n  const create = (overrides: IDataObject = {}): IDataObject => {\n    const data = generator(faker);\n\n    return { ...data, ...overrides };\n  };\n\n  const make = (count: number | IDataObject = 1, overrides: IDataObject = {}): IDataObject[] => {\n    const { data, length } = resolveArgs(count, overrides);\n\n    return Array.from({ length }).map(() => create(data));\n  };\n\n  const only = (keys: string | string[], overrides: IDataObject = {}): IDataObject => {\n    const data = create(overrides);\n\n    return Array.isArray(keys)\n      ? keys.reduce((filtered: IDataObject, key) => ({ ...filtered, [key]: data[key] }), {})\n      : { [keys]: data[keys] };\n  };\n\n  const seed = (value: number) => {\n    faker.seed(value);\n    return factoryObject;\n  };\n\n  const factoryObject: IFactoryObject = { create, make, only, seed };\n\n  return factoryObject;\n};\ntry {\n    // @ts-ignore\n    factory.displayName = \"factory\";\n    // @ts-ignore\n    factory.__docgenInfo = { \"description\": \"\", \"displayName\": \"factory\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/index.ts#factory\"] = { docgenInfo: factory.__docgenInfo, name: \"factory\", path: \"src/index.ts#factory\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"]}]}