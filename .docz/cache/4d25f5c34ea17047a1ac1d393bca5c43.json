{"remainingRequest":"/Users/olavo/Projects/node-factory/node_modules/docz-core/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/olavo/Projects/node-factory/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":false,\"typescript\":true,\"parseProps\":false}]],\"plugins\":[[\"/Users/olavo/Projects/node-factory/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}]],\"babelrc\":false,\"cacheCompression\":true,\"compact\":true}!/Users/olavo/Projects/node-factory/node_modules/react-docgen-typescript-loader/dist/index.js?{}!/Users/olavo/Projects/node-factory/src/index.ts","dependencies":[{"path":"/Users/olavo/Projects/node-factory/src/index.ts","mtime":1550265262326},{"path":"/Users/olavo/Projects/node-factory/node_modules/cache-loader/dist/cjs.js","mtime":1549581148956},{"path":"/Users/olavo/Projects/node-factory/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1549581148595},{"path":"/Users/olavo/Projects/node-factory/node_modules/react-docgen-typescript-loader/dist/index.js","mtime":1549581149558}],"contextDependencies":[],"result":["function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};var ownKeys=Object.keys(source);if(typeof Object.getOwnPropertySymbols==='function'){ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable;}));}ownKeys.forEach(function(key){_defineProperty(target,key,source[key]);});}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import faker from'faker';var resolveArgs=function resolveArgs(count){var overrides=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var length;var data;if(typeof count!=='number'){data=count;length=1;}else{data=overrides;length=count>0?count:1;}return{data:data,length:length};};export var factory=function factory(generator){var create=function create(){var overrides=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var data=generator(faker);return _objectSpread({},data,overrides);};var make=function make(){var count=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;var overrides=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var _resolveArgs=resolveArgs(count,overrides),data=_resolveArgs.data,length=_resolveArgs.length;return Array.from({length:length}).map(function(){return create(data);});};var only=function only(keys){var overrides=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var data=create(overrides);return Array.isArray(keys)?keys.reduce(function(filtered,key){return _objectSpread({},filtered,_defineProperty({},key,data[key]));},{}):_defineProperty({},keys,data[keys]);};var seed=function seed(value){faker.seed(value);return factoryObject;};var factoryObject={create:create,make:make,only:only,seed:seed};return factoryObject;};try{// @ts-ignore\nfactory.displayName=\"factory\";// @ts-ignore\nfactory.__docgenInfo={\"description\":\"\",\"displayName\":\"factory\",\"props\":{}};// @ts-ignore\nif(typeof STORYBOOK_REACT_CLASSES!==\"undefined\")// @ts-ignore\nSTORYBOOK_REACT_CLASSES[\"src/index.ts#factory\"]={docgenInfo:factory.__docgenInfo,name:\"factory\",path:\"src/index.ts#factory\"};}catch(__react_docgen_typescript_loader_error){}",{"version":3,"sources":["/Users/olavo/Projects/node-factory/src/index.ts"],"names":["faker","resolveArgs","count","overrides","length","data","factory","generator","create","make","Array","from","map","only","keys","isArray","reduce","filtered","key","seed","value","factoryObject","displayName","__docgenInfo","STORYBOOK_REACT_CLASSES","docgenInfo","name","path","__react_docgen_typescript_loader_error"],"mappings":"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","sourcesContent":["import faker from 'faker';\nimport { FactoryGenerator, IDataObject, IFactoryObject } from './types';\n\nconst resolveArgs = (count: number | IDataObject, overrides: IDataObject = {}): IDataObject => {\n  let length: number;\n  let data: IDataObject;\n\n  if (typeof count !== 'number') {\n    data = count;\n    length = 1;\n  } else {\n    data = overrides;\n    length = count > 0 ? count : 1;\n  }\n\n  return { data, length };\n};\n\nexport const factory = (generator: FactoryGenerator): IFactoryObject => {\n  const create = (overrides: IDataObject = {}): IDataObject => {\n    const data = generator(faker);\n\n    return { ...data, ...overrides };\n  };\n\n  const make = (count: number | IDataObject = 1, overrides: IDataObject = {}): IDataObject[] => {\n    const { data, length } = resolveArgs(count, overrides);\n\n    return Array.from({ length }).map(() => create(data));\n  };\n\n  const only = (keys: string | string[], overrides: IDataObject = {}): IDataObject => {\n    const data = create(overrides);\n\n    return Array.isArray(keys)\n      ? keys.reduce((filtered: IDataObject, key) => ({ ...filtered, [key]: data[key] }), {})\n      : { [keys]: data[keys] };\n  };\n\n  const seed = (value: number) => {\n    faker.seed(value);\n    return factoryObject;\n  };\n\n  const factoryObject: IFactoryObject = { create, make, only, seed };\n\n  return factoryObject;\n};\ntry {\n    // @ts-ignore\n    factory.displayName = \"factory\";\n    // @ts-ignore\n    factory.__docgenInfo = { \"description\": \"\", \"displayName\": \"factory\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/index.ts#factory\"] = { docgenInfo: factory.__docgenInfo, name: \"factory\", path: \"src/index.ts#factory\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"]}]}