{"version":3,"sources":["webpack:///./docs/src/api/4-seed.mdx","webpack:///./src/index.ts","webpack:///./docs/src/api/UserFactory.tsx"],"names":["MDXContent","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","layout","React","Component","_this$props","components","_objectWithoutProperties","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_1__","name","id","parentName","className","_UserFactory__WEBPACK_IMPORTED_MODULE_2__","parse","UserFactory","seed","create","factory","generator","overrides","arguments","length","undefined","_objectSpread","faker","factoryObject","make","_resolveArgs","count","data","resolveArgs","Array","from","map","only","keys","isArray","reduce","filtered","key","_defineProperty","value","displayName","__docgenInfo","description","STORYBOOK_REACT_CLASSES","docgenInfo","path","__react_docgen_typescript_loader_error","fake","random","uuid","findName","email","internet","__webpack_exports__","_ref","json","styles","react_default","style","background","borderLeft","color","margin","padding","fontStyle","fontSize","dangerouslySetInnerHTML","__html","number","string","boolean","null","JSON","stringify","replace","match","cls","test","defaultValue","required","type"],"mappings":"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","file":"static/js/docs-src-api-4-seed.2b595f4c.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import UserFactory from './UserFactory';\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"factoryseedvalue\"}}><MDXTag name=\"inlineCode\" components={components} parentName=\"h2\">{`Factory.seed(value)`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`args:`}</MDXTag></MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`value (number)`}</MDXTag>{`: This argument defines how many objects should be generated (default: 1)`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`return:`}</MDXTag></MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`self (IFactoryObject)`}</MDXTag>{`: Returns the factory object for fluent API`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"description\"}}>{`Description`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`At times, you might need consistent results or, in other words, a not so random set of data. For this, you can set a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`seed`}</MDXTag>{` which allows the random data to return the same result more than once.`}</MDXTag>\n<MDXTag name=\"blockquote\" components={components}>\n<MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`This is particularly useful for snapshot testing.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"example\"}}>{`Example`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`UserFactory.seed(123).create()\n`}</MDXTag></MDXTag>\n<UserFactory parse={(UserFactory) => UserFactory.seed(123).create()} />\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`UserFactory.seed(123).create()\n`}</MDXTag></MDXTag>\n<UserFactory parse={(UserFactory) => UserFactory.seed(123).create()} />\n           </MDXTag>\n  }\n}\n  ","import faker from 'faker';\nimport { FactoryGenerator, IDataObject, IFactoryObject } from './types';\n\nconst resolveArgs = (count: number | IDataObject, overrides: IDataObject = {}): IDataObject => {\n  let length: number;\n  let data: IDataObject;\n\n  if (typeof count !== 'number') {\n    data = count;\n    length = 1;\n  } else {\n    data = overrides;\n    length = count > 0 ? count : 1;\n  }\n\n  return { data, length };\n};\n\nexport const factory = (generator: FactoryGenerator): IFactoryObject => {\n  const create = (overrides: IDataObject = {}): IDataObject => {\n    const data = generator(faker);\n\n    return { ...data, ...overrides };\n  };\n\n  const make = (count: number | IDataObject = 1, overrides: IDataObject = {}): IDataObject[] => {\n    const { data, length } = resolveArgs(count, overrides);\n\n    return Array.from({ length }).map(() => create(data));\n  };\n\n  const only = (keys: string | string[], overrides: IDataObject = {}): IDataObject => {\n    const data = create(overrides);\n\n    return Array.isArray(keys)\n      ? keys.reduce((filtered: IDataObject, key) => ({ ...filtered, [key]: data[key] }), {})\n      : { [keys]: data[keys] };\n  };\n\n  const seed = (value: number) => {\n    faker.seed(value);\n    return factoryObject;\n  };\n\n  const factoryObject: IFactoryObject = { create, make, only, seed };\n\n  return factoryObject;\n};\ntry {\n    // @ts-ignore\n    factory.displayName = \"factory\";\n    // @ts-ignore\n    factory.__docgenInfo = { \"description\": \"\", \"displayName\": \"factory\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/index.ts#factory\"] = { docgenInfo: factory.__docgenInfo, name: \"factory\", path: \"src/index.ts#factory\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","// tslint:disable\nimport React from 'react';\nimport { factory } from '../../../src/index';\n\nconst UserFactory = factory(fake => ({\n  id: fake.random.uuid(),\n  name: fake.name.findName(),\n  email: fake.internet.email(),\n}));\n\nfunction syntaxHighlight(json) {\n  const styles = {\n    number: 'color: #3490DC',\n    key: 'color: #6CB2EB',\n    string: 'color: #3490DC',\n    boolean: 'color: #621B18',\n    null: 'color: #E3342F',\n  };\n\n  if (typeof json != 'string') {\n       json = JSON.stringify(json, undefined, 2);\n  }\n  json = json.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n  return json.replace(/(\"(\\\\u[a-zA-Z0-9]{4}|\\\\[^u]|[^\\\\\"])*\"(\\s*:)?|\\b(true|false|null)\\b|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)/g, function (match) {\n      var cls = 'number';\n      if (/^\"/.test(match)) {\n          if (/:$/.test(match)) {\n              cls = 'key';\n          } else {\n              cls = 'string';\n          }\n      } else if (/true|false/.test(match)) {\n          cls = 'boolean';\n      } else if (/null/.test(match)) {\n          cls = 'null';\n      }\n      return '<span style=\"' + styles[cls] + '\">' + match + '</span>';\n  });\n}\n\nexport default ({ parse }) => (\n  <pre style={{\n    background: '#EEF1F5',\n    borderLeft: '5px solid #CED4DE',\n    color: '#7D899C',\n    margin: '-30px 0 25px 2px',\n    padding: '20px',\n    fontStyle: 'italic',\n    fontSize: '18px',\n  }} dangerouslySetInnerHTML={{ __html: syntaxHighlight(parse(UserFactory)) }} />\n);\ntry {\n    // @ts-ignore\n    UserFactory.displayName = \"UserFactory\";\n    // @ts-ignore\n    UserFactory.__docgenInfo = { \"description\": \"\", \"displayName\": \"UserFactory\", \"props\": { \"parse\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"parse\", \"required\": true, \"type\": { \"name\": \"any\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"docs/src/api/UserFactory.tsx#UserFactory\"] = { docgenInfo: UserFactory.__docgenInfo, name: \"UserFactory\", path: \"docs/src/api/UserFactory.tsx#UserFactory\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"],"sourceRoot":""}